Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@14e2266
Adding type registration boolean -> org.hibernate.type.BooleanType@14e2266
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14e2266
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@131444
Adding type registration true_false -> org.hibernate.type.TrueFalseType@13e5d15
Adding type registration yes_no -> org.hibernate.type.YesNoType@1e3e4c5
Adding type registration byte -> org.hibernate.type.ByteType@17e4c97
Adding type registration byte -> org.hibernate.type.ByteType@17e4c97
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17e4c97
Adding type registration character -> org.hibernate.type.CharacterType@1b6ef20
Adding type registration char -> org.hibernate.type.CharacterType@1b6ef20
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b6ef20
Adding type registration short -> org.hibernate.type.ShortType@1977d63
Adding type registration short -> org.hibernate.type.ShortType@1977d63
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1977d63
Adding type registration integer -> org.hibernate.type.IntegerType@1743fba
Adding type registration int -> org.hibernate.type.IntegerType@1743fba
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1743fba
Adding type registration long -> org.hibernate.type.LongType@c5c76c
Adding type registration long -> org.hibernate.type.LongType@c5c76c
Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c76c
Adding type registration float -> org.hibernate.type.FloatType@f93d1a
Adding type registration float -> org.hibernate.type.FloatType@f93d1a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f93d1a
Adding type registration double -> org.hibernate.type.DoubleType@5a5519
Adding type registration double -> org.hibernate.type.DoubleType@5a5519
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a5519
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f023c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f023c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a1ee47
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a1ee47
Adding type registration string -> org.hibernate.type.StringType@1ba9f7
Adding type registration java.lang.String -> org.hibernate.type.StringType@1ba9f7
Adding type registration url -> org.hibernate.type.UrlType@1d394ab
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d394ab
Adding type registration date -> org.hibernate.type.DateType@1f8c10e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f8c10e
Adding type registration time -> org.hibernate.type.TimeType@1e05ea
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e05ea
Adding type registration timestamp -> org.hibernate.type.TimestampType@8420c8
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@8420c8
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@8420c8
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@10fa4b8
Adding type registration calendar -> org.hibernate.type.CalendarType@1134043
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1134043
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1134043
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10ec447
Adding type registration locale -> org.hibernate.type.LocaleType@1ada1e0
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ada1e0
Adding type registration currency -> org.hibernate.type.CurrencyType@2bc29
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2bc29
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2af131
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2af131
Adding type registration class -> org.hibernate.type.ClassType@eeda37
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@eeda37
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bdcbc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bdcbc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@143c610
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1a04a1b
Adding type registration binary -> org.hibernate.type.BinaryType@1be71fd
Adding type registration byte[] -> org.hibernate.type.BinaryType@1be71fd
Adding type registration [B -> org.hibernate.type.BinaryType@1be71fd
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dee6e2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dee6e2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dee6e2
Adding type registration image -> org.hibernate.type.ImageType@f0f2eb
Adding type registration characters -> org.hibernate.type.CharArrayType@157be76
Adding type registration char[] -> org.hibernate.type.CharArrayType@157be76
Adding type registration [C -> org.hibernate.type.CharArrayType@157be76
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fd7136
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fd7136
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fd7136
Adding type registration text -> org.hibernate.type.TextType@1f7b41b
Adding type registration blob -> org.hibernate.type.BlobType@12429c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12429c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ea9f6e
Adding type registration clob -> org.hibernate.type.ClobType@bd477a
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@bd477a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1dbe098
Adding type registration serializable -> org.hibernate.type.SerializableType@1176de6
Adding type registration object -> org.hibernate.type.ObjectType@28de85
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@28de85
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a3e686
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17378ab
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f72a79
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5a23b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ddf367
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@96fd7c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@dbdc4b
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5bf9cf
HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
HHH000412: Hibernate Core {4.1.9.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
Attempting to resolve on classpath under org/hibernate/
Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
hibernate.connection.driver_class=com.mysql.jdbc.Driver
hibernate.connection.username=root
hibernate.connection.password=
hibernate.connection.url=jdbc:mysql://localhost:3306/java_lab_1
hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
show_sql=true
connection.pool_size=1
Session-factory config [null] named class [com.pentalog.nguzun.vo.User] for mapping
Session-factory config [null] named class [com.pentalog.nguzun.vo.Group] for mapping
Session-factory config [null] named class [com.pentalog.nguzun.vo.Role] for mapping
HHH000041: Configured SessionFactory: null
Properties: {hibernate.connection.password=, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=24.65-b04, hibernate.connection.username=root, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\java\workspace\LaboratorJava3, java.runtime.version=1.7.0_65-b20, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\Nicolai\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1251, java.library.path=C:\Program Files\Java\jre7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre8/bin/client;C:/Program Files/Java/jre8/bin;C:/Program Files/Java/jre8/lib/i386;C:\imagemagick;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\wamp\bin\php\php5.4.16;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Bitvise SSH Client;C:\Program Files\Java\jdk1.7.0_25\bin;C:\Program Files\apache-maven-3.2.2\bin;D:\java\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=51.0, hibernate.connection.pool_size=1, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\Nicolai, user.timezone=Europe/Minsk, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1251, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, java.class.path=D:\java\workspace\LaboratorJava3\target\test-classes;D:\java\workspace\LaboratorJava3\target\classes;C:\Users\Nicolai\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Nicolai\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Nicolai\.m2\repository\mysql\mysql-connector-java\5.0.8\mysql-connector-java-5.0.8.jar;C:\Users\Nicolai\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Nicolai\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Nicolai\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Nicolai\.m2\repository\org\json\json\20090211\json-20090211.jar;C:\Users\Nicolai\.m2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;C:\Users\Nicolai\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Nicolai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Nicolai\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Nicolai\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Nicolai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Nicolai\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;/D:/java/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/D:/java/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, user.name=Nicolai, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 51552 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.pentalog.nguzun.dao.GroupDAOTest, java.home=C:\Program Files\Java\jre7, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, hibernate.connection.url=jdbc:mysql://localhost:3306/java_lab_1, connection.pool_size=1, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_65, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\lib\jfr.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.pentalog.nguzun.vo.User
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name User
Bind entity com.pentalog.nguzun.vo.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='id_group', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property login with lazy=false
building SimpleValue for login
Building property login
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
building SimpleValue for password
Building property password
Binding entity from annotated class: com.pentalog.nguzun.vo.Group
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Group
Bind entity com.pentalog.nguzun.vo.Group on table groups
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=id, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
building SimpleValue for description
Building property description
Binding column: Ejb3JoinColumn{logicalColumnName='id_role', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=role, insertable=true, updatable=true, unique=false}
Building property role
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='group'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=users, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='group'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='group'}
Collection role: com.pentalog.nguzun.vo.Group.users
Building property users
Binding entity from annotated class: com.pentalog.nguzun.vo.Role
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Role
Bind entity com.pentalog.nguzun.vo.Role on table role
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
building SimpleValue for description
Building property description
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=groups, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=groups_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
Collection role: com.pentalog.nguzun.vo.Role.groups
Building property groups
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for login
Setting SimpleValue typeName for password
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for description
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for description
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.pentalog.nguzun.vo.Group.users
Binding a OneToMany: com.pentalog.nguzun.vo.Group.users through a foreign key
Mapping collection: com.pentalog.nguzun.vo.Group.users -> user
Retrieving property com.pentalog.nguzun.vo.User.group
Mapped collection key: id_group, one-to-many: com.pentalog.nguzun.vo.User
Second pass for collection: com.pentalog.nguzun.vo.Role.groups
Binding a OneToMany: com.pentalog.nguzun.vo.Role.groups through a foreign key
Mapping collection: com.pentalog.nguzun.vo.Role.groups -> groups
Retrieving property com.pentalog.nguzun.vo.Group.role
Mapped collection key: id_role, one-to-many: com.pentalog.nguzun.vo.Group
Processing native query and ResultSetMapping mappings
Processing association property references
Processing foreign key constraints
Resolving reference to class: com.pentalog.nguzun.vo.Role
Resolving reference to class: com.pentalog.nguzun.vo.Group
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 1
HHH000006: Autocommit mode: false
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/java_lab_1]
HHH000046: Connection properties: {user=root, password=}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/java_lab_1, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.12-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
      major : 5
      minor : 0
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=24.65-b04, hibernate.connection.username=root, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\java\workspace\LaboratorJava3, java.runtime.version=1.7.0_65-b20, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\Nicolai\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1251, java.library.path=C:\Program Files\Java\jre7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre8/bin/client;C:/Program Files/Java/jre8/bin;C:/Program Files/Java/jre8/lib/i386;C:\imagemagick;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\wamp\bin\php\php5.4.16;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Bitvise SSH Client;C:\Program Files\Java\jdk1.7.0_25\bin;C:\Program Files\apache-maven-3.2.2\bin;D:\java\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=51.0, hibernate.connection.pool_size=1, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\Nicolai, user.timezone=Europe/Minsk, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=Cp1251, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Nicolai, java.class.path=D:\java\workspace\LaboratorJava3\target\test-classes;D:\java\workspace\LaboratorJava3\target\classes;C:\Users\Nicolai\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Nicolai\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Nicolai\.m2\repository\mysql\mysql-connector-java\5.0.8\mysql-connector-java-5.0.8.jar;C:\Users\Nicolai\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Nicolai\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Nicolai\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Nicolai\.m2\repository\org\json\json\20090211\json-20090211.jar;C:\Users\Nicolai\.m2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;C:\Users\Nicolai\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Nicolai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Nicolai\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Nicolai\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Nicolai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Nicolai\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;/D:/java/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/D:/java/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 51552 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.pentalog.nguzun.dao.GroupDAOTest, hibernate.connection.url=jdbc:mysql://localhost:3306/java_lab_1, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=en, connection.pool_size=1, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_65, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\lib\jfr.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
Static SQL for entity: com.pentalog.nguzun.vo.Group
 Version select: select id from groups where id =?
 Snapshot select: select group_.id, group_.name as name1_, group_.description as descript3_1_, group_.id_role as id4_1_ from groups group_ where group_.id=?
 Insert 0: insert into groups (name, description, id_role, id) values (?, ?, ?, ?)
 Update 0: update groups set name=?, description=?, id_role=? where id=?
 Delete 0: delete from groups where id=?
 Identity insert: insert into groups (name, description, id_role) values (?, ?, ?)
Static SQL for entity: com.pentalog.nguzun.vo.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.name as name0_, user_.id_group as id5_0_, user_.login as login0_, user_.password as password0_ from user user_ where user_.id=?
 Insert 0: insert into user (name, id_group, login, password, id) values (?, ?, ?, ?, ?)
 Update 0: update user set name=?, id_group=?, login=?, password=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (name, id_group, login, password) values (?, ?, ?, ?)
Static SQL for entity: com.pentalog.nguzun.vo.Role
 Version select: select id from role where id =?
 Snapshot select: select role_.id, role_.name as name2_, role_.description as descript3_2_ from role role_ where role_.id=?
 Insert 0: insert into role (name, description, id) values (?, ?, ?)
 Update 0: update role set name=?, description=? where id=?
 Delete 0: delete from role where id=?
 Identity insert: insert into role (name, description) values (?, ?)
Static SQL for collection: com.pentalog.nguzun.vo.Group.users
 Row insert: update user set id_group=? where id=?
 Row delete: update user set id_group=null where id_group=? and id=?
 One-shot delete: update user set id_group=null where id_group=?
Static SQL for collection: com.pentalog.nguzun.vo.Role.groups
 Row insert: update groups set id_role=? where id=?
 Row delete: update groups set id_role=null where id_role=? and id=?
 One-shot delete: update groups set id_role=null where id_role=?
Static select for entity com.pentalog.nguzun.vo.Group [NONE]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.Group [READ]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.Group [UPGRADE]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [UPGRADE_NOWAIT]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [FORCE]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [PESSIMISTIC_READ]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=? lock in share mode
Static select for entity com.pentalog.nguzun.vo.Group [PESSIMISTIC_WRITE]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [OPTIMISTIC]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.Group: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.Group: select group0_.id as id1_0_, group0_.name as name1_0_, group0_.description as descript3_1_0_, group0_.id_role as id4_1_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [NONE]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [READ]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [UPGRADE]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [UPGRADE_NOWAIT]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [FORCE]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [PESSIMISTIC_READ]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=? lock in share mode
Static select for entity com.pentalog.nguzun.vo.User [PESSIMISTIC_WRITE]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [OPTIMISTIC]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.User: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.User: select user0_.id as id0_0_, user0_.name as name0_0_, user0_.id_group as id5_0_0_, user0_.login as login0_0_, user0_.password as password0_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [NONE]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [READ]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [UPGRADE]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [UPGRADE_NOWAIT]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [FORCE]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_READ]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=? lock in share mode
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_WRITE]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [OPTIMISTIC]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.Role: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.Role: select role0_.id as id2_0_, role0_.name as name2_0_, role0_.description as descript3_2_0_ from role role0_ where role0_.id=?
Static select for one-to-many com.pentalog.nguzun.vo.Group.users: select users0_.id_group as id5_1_1_, users0_.id as id0_1_, users0_.id as id0_0_, users0_.name as name0_0_, users0_.id_group as id5_0_0_, users0_.login as login0_0_, users0_.password as password0_0_ from user users0_ where users0_.id_group=?
Static select for one-to-many com.pentalog.nguzun.vo.Role.groups: select groups0_.id_role as id4_2_1_, groups0_.id as id1_1_, groups0_.id as id1_0_, groups0_.name as name1_0_, groups0_.description as descript3_1_0_, groups0_.id_role as id4_1_0_ from groups groups0_ where groups0_.id_role=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@160983a
Registering SessionFactory: e9ff181d-5afe-4e1d-9bea-d3da9180e108 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Adding type registration boolean -> org.hibernate.type.BooleanType@14e2266
Adding type registration boolean -> org.hibernate.type.BooleanType@14e2266
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14e2266
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@131444
Adding type registration true_false -> org.hibernate.type.TrueFalseType@13e5d15
Adding type registration yes_no -> org.hibernate.type.YesNoType@1e3e4c5
Adding type registration byte -> org.hibernate.type.ByteType@17e4c97
Adding type registration byte -> org.hibernate.type.ByteType@17e4c97
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17e4c97
Adding type registration character -> org.hibernate.type.CharacterType@1b6ef20
Adding type registration char -> org.hibernate.type.CharacterType@1b6ef20
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b6ef20
Adding type registration short -> org.hibernate.type.ShortType@1977d63
Adding type registration short -> org.hibernate.type.ShortType@1977d63
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1977d63
Adding type registration integer -> org.hibernate.type.IntegerType@1743fba
Adding type registration int -> org.hibernate.type.IntegerType@1743fba
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1743fba
Adding type registration long -> org.hibernate.type.LongType@c5c76c
Adding type registration long -> org.hibernate.type.LongType@c5c76c
Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c76c
Adding type registration float -> org.hibernate.type.FloatType@f93d1a
Adding type registration float -> org.hibernate.type.FloatType@f93d1a
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@f93d1a
Adding type registration double -> org.hibernate.type.DoubleType@5a5519
Adding type registration double -> org.hibernate.type.DoubleType@5a5519
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a5519
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@f023c
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@f023c
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1a1ee47
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1a1ee47
Adding type registration string -> org.hibernate.type.StringType@1ba9f7
Adding type registration java.lang.String -> org.hibernate.type.StringType@1ba9f7
Adding type registration url -> org.hibernate.type.UrlType@1d394ab
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d394ab
Adding type registration date -> org.hibernate.type.DateType@1f8c10e
Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f8c10e
Adding type registration time -> org.hibernate.type.TimeType@1e05ea
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e05ea
Adding type registration timestamp -> org.hibernate.type.TimestampType@8420c8
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@8420c8
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@8420c8
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@10fa4b8
Adding type registration calendar -> org.hibernate.type.CalendarType@1134043
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1134043
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1134043
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@10ec447
Adding type registration locale -> org.hibernate.type.LocaleType@1ada1e0
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ada1e0
Adding type registration currency -> org.hibernate.type.CurrencyType@2bc29
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2bc29
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2af131
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2af131
Adding type registration class -> org.hibernate.type.ClassType@eeda37
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@eeda37
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3bdcbc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3bdcbc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@143c610
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1a04a1b
Adding type registration binary -> org.hibernate.type.BinaryType@1be71fd
Adding type registration byte[] -> org.hibernate.type.BinaryType@1be71fd
Adding type registration [B -> org.hibernate.type.BinaryType@1be71fd
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dee6e2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dee6e2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dee6e2
Adding type registration image -> org.hibernate.type.ImageType@f0f2eb
Adding type registration characters -> org.hibernate.type.CharArrayType@157be76
Adding type registration char[] -> org.hibernate.type.CharArrayType@157be76
Adding type registration [C -> org.hibernate.type.CharArrayType@157be76
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fd7136
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fd7136
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fd7136
Adding type registration text -> org.hibernate.type.TextType@1f7b41b
Adding type registration blob -> org.hibernate.type.BlobType@12429c
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12429c
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ea9f6e
Adding type registration clob -> org.hibernate.type.ClobType@bd477a
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@bd477a
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1dbe098
Adding type registration serializable -> org.hibernate.type.SerializableType@1176de6
Adding type registration object -> org.hibernate.type.ObjectType@28de85
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@28de85
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1e4ccad
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@399ad5
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e431c2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ef926
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@175e41
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d2fb6
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@978d36
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b7d9a8
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: /hibernate.cfg.xml
HHH000040: Configuration resource: /hibernate.cfg.xml
Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
Attempting to resolve on classpath under org/hibernate/
Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
hibernate.connection.driver_class=com.mysql.jdbc.Driver
hibernate.connection.username=root
hibernate.connection.password=
hibernate.connection.url=jdbc:mysql://localhost:3306/java_lab_1
hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
show_sql=true
connection.pool_size=1
Session-factory config [null] named class [com.pentalog.nguzun.vo.User] for mapping
Session-factory config [null] named class [com.pentalog.nguzun.vo.Group] for mapping
Session-factory config [null] named class [com.pentalog.nguzun.vo.Role] for mapping
HHH000041: Configured SessionFactory: null
Properties: {hibernate.connection.password=, java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=24.65-b04, hibernate.connection.username=root, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\java\workspace\LaboratorJava3, java.runtime.version=1.7.0_65-b20, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\Nicolai\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1251, java.library.path=C:\Program Files\Java\jre7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre8/bin/client;C:/Program Files/Java/jre8/bin;C:/Program Files/Java/jre8/lib/i386;C:\imagemagick;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\wamp\bin\php\php5.4.16;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Bitvise SSH Client;C:\Program Files\Java\jdk1.7.0_25\bin;C:\Program Files\apache-maven-3.2.2\bin;D:\java\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=51.0, hibernate.connection.pool_size=1, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\Nicolai, user.timezone=Europe/Minsk, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=Cp1251, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, java.class.path=D:\java\workspace\LaboratorJava3\target\test-classes;D:\java\workspace\LaboratorJava3\target\classes;C:\Users\Nicolai\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Nicolai\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Nicolai\.m2\repository\mysql\mysql-connector-java\5.0.8\mysql-connector-java-5.0.8.jar;C:\Users\Nicolai\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Nicolai\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Nicolai\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Nicolai\.m2\repository\org\json\json\20090211\json-20090211.jar;C:\Users\Nicolai\.m2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;C:\Users\Nicolai\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Nicolai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Nicolai\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Nicolai\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Nicolai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Nicolai\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;/D:/java/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/D:/java/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, user.name=Nicolai, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 51552 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.pentalog.nguzun.dao.GroupDAOTest, java.home=C:\Program Files\Java\jre7, sun.arch.data.model=32, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, hibernate.connection.url=jdbc:mysql://localhost:3306/java_lab_1, connection.pool_size=1, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_65, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\lib\jfr.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.pentalog.nguzun.vo.User
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name User
Bind entity com.pentalog.nguzun.vo.User on table user
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3JoinColumn{logicalColumnName='id_group', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=group, insertable=true, updatable=true, unique=false}
Building property group
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property login with lazy=false
building SimpleValue for login
Building property login
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property password with lazy=false
building SimpleValue for password
Building property password
Binding entity from annotated class: com.pentalog.nguzun.vo.Group
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Group
Bind entity com.pentalog.nguzun.vo.Group on table groups
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=id, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
building SimpleValue for description
Building property description
Binding column: Ejb3JoinColumn{logicalColumnName='id_role', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=role, insertable=true, updatable=true, unique=false}
Building property role
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='group'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=users, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(groups), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='group'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='group'}
Collection role: com.pentalog.nguzun.vo.Group.users
Building property users
Binding entity from annotated class: com.pentalog.nguzun.vo.Role
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name Role
Bind entity com.pentalog.nguzun.vo.Role on table role
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=id, insertable=true, updatable=true, unique=true}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=name, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property name with lazy=false
building SimpleValue for name
Building property name
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
building SimpleValue for description
Building property description
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=groups, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=groups_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='groups_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='role'}
Collection role: com.pentalog.nguzun.vo.Role.groups
Building property groups
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for login
Setting SimpleValue typeName for password
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for description
Setting SimpleValue typeName for id
Setting SimpleValue typeName for name
Setting SimpleValue typeName for description
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.pentalog.nguzun.vo.Group.users
Binding a OneToMany: com.pentalog.nguzun.vo.Group.users through a foreign key
Mapping collection: com.pentalog.nguzun.vo.Group.users -> user
Retrieving property com.pentalog.nguzun.vo.User.group
Mapped collection key: id_group, one-to-many: com.pentalog.nguzun.vo.User
Second pass for collection: com.pentalog.nguzun.vo.Role.groups
Binding a OneToMany: com.pentalog.nguzun.vo.Role.groups through a foreign key
Mapping collection: com.pentalog.nguzun.vo.Role.groups -> groups
Retrieving property com.pentalog.nguzun.vo.Group.role
Mapped collection key: id_role, one-to-many: com.pentalog.nguzun.vo.Group
Processing native query and ResultSetMapping mappings
Processing association property references
Processing foreign key constraints
Resolving reference to class: com.pentalog.nguzun.vo.Role
Resolving reference to class: com.pentalog.nguzun.vo.Group
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 1
HHH000006: Autocommit mode: false
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/java_lab_1]
HHH000046: Connection properties: {user=root, password=}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/java_lab_1, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.6.12-log
      major : 5
      minor : 6
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.0.8 ( Revision: ${svn.Revision} )
      major : 5
      minor : 0
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLInnoDBDialect
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
multi-tenancy strategy : NONE
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : : disabled
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.password=, sun.boot.library.path=C:\Program Files\Java\jre7\bin, java.vm.version=24.65-b04, hibernate.connection.username=root, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\java\workspace\LaboratorJava3, java.runtime.version=1.7.0_65-b20, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=C:\Program Files\Java\jre7\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\Nicolai\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1251, java.library.path=C:\Program Files\Java\jre7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre8/bin/client;C:/Program Files/Java/jre8/bin;C:/Program Files/Java/jre8/lib/i386;C:\imagemagick;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\OpenCL SDK\2.0\bin\x86;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\wamp\bin\php\php5.4.16;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Bitvise SSH Client;C:\Program Files\Java\jdk1.7.0_25\bin;C:\Program Files\apache-maven-3.2.2\bin;D:\java\eclipse;;., java.specification.name=Java Platform API Specification, java.class.version=51.0, hibernate.connection.pool_size=1, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\Nicolai, user.timezone=Europe/Minsk, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=Cp1251, hibernate.connection.driver_class=com.mysql.jdbc.Driver, show_sql=true, user.name=Nicolai, java.class.path=D:\java\workspace\LaboratorJava3\target\test-classes;D:\java\workspace\LaboratorJava3\target\classes;C:\Users\Nicolai\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\Nicolai\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Nicolai\.m2\repository\mysql\mysql-connector-java\5.0.8\mysql-connector-java-5.0.8.jar;C:\Users\Nicolai\.m2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;C:\Users\Nicolai\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;C:\Users\Nicolai\.m2\repository\javax\servlet\servlet-api\2.5\servlet-api-2.5.jar;C:\Users\Nicolai\.m2\repository\org\json\json\20090211\json-20090211.jar;C:\Users\Nicolai\.m2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;C:\Users\Nicolai\.m2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\hibernate-core\4.1.9.Final\hibernate-core-4.1.9.Final.jar;C:\Users\Nicolai\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Nicolai\.m2\repository\org\jboss\logging\jboss-logging\3.1.0.GA\jboss-logging-3.1.0.GA.jar;C:\Users\Nicolai\.m2\repository\org\javassist\javassist\3.17.1-GA\javassist-3.17.1-GA.jar;C:\Users\Nicolai\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.1_spec\1.0.0.Final\jboss-transaction-api_1.1_spec-1.0.0.Final.jar;C:\Users\Nicolai\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\Nicolai\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.1.Final\hibernate-commons-annotations-4.0.1.Final.jar;/D:/java/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/D:/java/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jre7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 51552 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.pentalog.nguzun.dao.GroupDAOTest, hibernate.connection.url=jdbc:mysql://localhost:3306/java_lab_1, hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect, java.specification.vendor=Oracle Corporation, user.language=en, connection.pool_size=1, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_65, java.ext.dirs=C:\Program Files\Java\jre7\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jre7\lib\resources.jar;C:\Program Files\Java\jre7\lib\rt.jar;C:\Program Files\Java\jre7\lib\sunrsasign.jar;C:\Program Files\Java\jre7\lib\jsse.jar;C:\Program Files\Java\jre7\lib\jce.jar;C:\Program Files\Java\jre7\lib\charsets.jar;C:\Program Files\Java\jre7\lib\jfr.jar;C:\Program Files\Java\jre7\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
Setting dialect [org.hibernate.dialect.MySQLInnoDBDialect]
Static SQL for entity: com.pentalog.nguzun.vo.Group
 Version select: select id from groups where id =?
 Snapshot select: select group_.id, group_.name as name7_, group_.description as descript3_7_, group_.id_role as id4_7_ from groups group_ where group_.id=?
 Insert 0: insert into groups (name, description, id_role, id) values (?, ?, ?, ?)
 Update 0: update groups set name=?, description=?, id_role=? where id=?
 Delete 0: delete from groups where id=?
 Identity insert: insert into groups (name, description, id_role) values (?, ?, ?)
Static SQL for entity: com.pentalog.nguzun.vo.User
 Version select: select id from user where id =?
 Snapshot select: select user_.id, user_.name as name6_, user_.id_group as id5_6_, user_.login as login6_, user_.password as password6_ from user user_ where user_.id=?
 Insert 0: insert into user (name, id_group, login, password, id) values (?, ?, ?, ?, ?)
 Update 0: update user set name=?, id_group=?, login=?, password=? where id=?
 Delete 0: delete from user where id=?
 Identity insert: insert into user (name, id_group, login, password) values (?, ?, ?, ?)
Static SQL for entity: com.pentalog.nguzun.vo.Role
 Version select: select id from role where id =?
 Snapshot select: select role_.id, role_.name as name8_, role_.description as descript3_8_ from role role_ where role_.id=?
 Insert 0: insert into role (name, description, id) values (?, ?, ?)
 Update 0: update role set name=?, description=? where id=?
 Delete 0: delete from role where id=?
 Identity insert: insert into role (name, description) values (?, ?)
Static SQL for collection: com.pentalog.nguzun.vo.Group.users
 Row insert: update user set id_group=? where id=?
 Row delete: update user set id_group=null where id_group=? and id=?
 One-shot delete: update user set id_group=null where id_group=?
Static SQL for collection: com.pentalog.nguzun.vo.Role.groups
 Row insert: update groups set id_role=? where id=?
 Row delete: update groups set id_role=null where id_role=? and id=?
 One-shot delete: update groups set id_role=null where id_role=?
Static select for entity com.pentalog.nguzun.vo.Group [NONE]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.Group [READ]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.Group [UPGRADE]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [UPGRADE_NOWAIT]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [FORCE]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [PESSIMISTIC_READ]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=? lock in share mode
Static select for entity com.pentalog.nguzun.vo.Group [PESSIMISTIC_WRITE]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [PESSIMISTIC_FORCE_INCREMENT]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Group [OPTIMISTIC]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.Group [OPTIMISTIC_FORCE_INCREMENT]: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.Group: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.Group: select group0_.id as id7_0_, group0_.name as name7_0_, group0_.description as descript3_7_0_, group0_.id_role as id4_7_0_ from groups group0_ where group0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [NONE]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [READ]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [UPGRADE]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [UPGRADE_NOWAIT]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [FORCE]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [PESSIMISTIC_READ]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? lock in share mode
Static select for entity com.pentalog.nguzun.vo.User [PESSIMISTIC_WRITE]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [OPTIMISTIC]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.User: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.User: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [NONE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [READ]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [UPGRADE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [UPGRADE_NOWAIT]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [FORCE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_READ]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? lock in share mode
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_WRITE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [OPTIMISTIC]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.Role: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.Role: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for one-to-many com.pentalog.nguzun.vo.Group.users: select users0_.id_group as id5_7_1_, users0_.id as id6_1_, users0_.id as id6_0_, users0_.name as name6_0_, users0_.id_group as id5_6_0_, users0_.login as login6_0_, users0_.password as password6_0_ from user users0_ where users0_.id_group=?
Static select for one-to-many com.pentalog.nguzun.vo.Role.groups: select groups0_.id_role as id4_8_1_, groups0_.id as id7_1_, groups0_.id as id7_0_, groups0_.name as name7_0_, groups0_.description as descript3_7_0_, groups0_.id_role as id4_7_0_ from groups groups0_ where groups0_.id_role=?
Registering SessionFactory: 3c81c983-36d1-4447-b336-a29d747961f9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: false
HHH000437: Attempting to save one or more entities that have a non-nullable association with an unsaved transient entity. The unsaved transient entity must be saved in an operation prior to saving these dependent entities.
	Unsaved transient entity: ([com.pentalog.nguzun.vo.Role#0])
	Dependent entities: ([[com.pentalog.nguzun.vo.Group#<null>]])
	Non-nullable association(s): ([com.pentalog.nguzun.vo.Group.role])
rolling back
rolled JDBC Connection
Releasing JDBC connection
Released JDBC connection
r0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.User [OPTIMISTIC]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.User: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.User: select user0_.id as id6_0_, user0_.name as name6_0_, user0_.id_group as id5_6_0_, user0_.login as login6_0_, user0_.password as password6_0_ from user user0_ where user0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [NONE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [READ]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [UPGRADE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [UPGRADE_NOWAIT]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [FORCE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_READ]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? lock in share mode
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_WRITE]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=? for update
Static select for entity com.pentalog.nguzun.vo.Role [OPTIMISTIC]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for entity com.pentalog.nguzun.vo.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for action ACTION_MERGE on entity com.pentalog.nguzun.vo.Role: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for action ACTION_REFRESH on entity com.pentalog.nguzun.vo.Role: select role0_.id as id8_0_, role0_.name as name8_0_, role0_.description as descript3_8_0_ from role role0_ where role0_.id=?
Static select for one-to-many com.pentalog.nguzun.vo.Group.users: select users0_.id_group as id5_7_1_, users0_.id as id6_1_, users0_.id as id6_0_, users0_.name as name6_0_, users0_.id_group as id5_6_0_, users0_.login as login6_0_, users0_.password as password6_0_ from user users0_ where users0_.id_group=?
Static select for one-to-many com.pentalog.nguzun.vo.Role.groups: select groups0_.id_role as id4_8_1_, groups0_.id as id7_1_, groups0_.id as id7_0_, groups0_.name as name7_0_, groups0_.description as descript3_7_0_, groups0_.id_role as id4_7_0_ from groups groups0_ where groups0_.id_role=?
Registering SessionFactory: 3c81c983-36d1-4447-b336-a29d747961f9 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
begin
Obtaining JDBC connection
Obtained JDBC connection
initial autocommit status: false
HHH000437: Attempting to save one or more entities that have a non-nullable association with an unsaved transient entity. The unsaved transient entity must be saved in an operation prior to saving these dependent entities.
	Unsaved transient entity: ([com.pentalog.nguzun.vo.Role#0])
	Dependent entities: ([[com.pentalog.nguzun.vo.Group#<null>]])
	Non-nullable association(s): ([com.pentalog.nguzun.vo.Group.role])
rolling back
rolled JDBC Connection
Releasing JDBC connection
Released JDBC connection
